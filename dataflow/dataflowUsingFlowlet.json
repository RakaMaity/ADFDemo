{
	"name": "dataflowUsingFlowlet",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "WindowDataSet",
						"type": "DatasetReference"
					},
					"name": "employeesWithDuplicateRows"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedTextOutput",
						"type": "DatasetReference"
					},
					"name": "sinkOfEmployees"
				}
			],
			"transformations": [
				{
					"name": "flowlet1",
					"flowlet": {
						"referenceName": "flowletForRemovingDuplicates",
						"type": "DataFlowReference"
					}
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          empName as string,",
				"          gender as string,",
				"          location as string,",
				"          department as string,",
				"          Salary as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employeesWithDuplicateRows",
				"employeesWithDuplicateRows compose(mapColumn(",
				"          empName,",
				"          gender,",
				"          department",
				"     ),",
				"     composition: 'flowletForRemovingDuplicates') ~> flowlet1@(outputofFlowlet)",
				"flowlet1@outputofFlowlet sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['EmployeesFlowlet.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empId,",
				"          empName,",
				"          gender,",
				"          department",
				"     ),",
				"     partitionBy('hash', 1)) ~> sinkOfEmployees"
			]
		}
	}
}