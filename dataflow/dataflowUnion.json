{
	"name": "dataflowUnion",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "biologyDataSet",
						"type": "DatasetReference"
					},
					"name": "BiologyEmployees"
				},
				{
					"dataset": {
						"referenceName": "PhysicsDataSet",
						"type": "DatasetReference"
					},
					"name": "PhysicsEmployees"
				},
				{
					"dataset": {
						"referenceName": "LawEmployees",
						"type": "DatasetReference"
					},
					"name": "LawEmployees"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedTextOutput",
						"type": "DatasetReference"
					},
					"name": "allEmployeesSink"
				}
			],
			"transformations": [
				{
					"name": "allEmployees"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          empName as string,",
				"          gender as string,",
				"          location as string,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BiologyEmployees",
				"source(output(",
				"          empid as string,",
				"          empName as string,",
				"          gender as string,",
				"          location as string,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> PhysicsEmployees",
				"source(output(",
				"          empid as string,",
				"          empName as string,",
				"          gender as string,",
				"          location as string,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LawEmployees",
				"BiologyEmployees, PhysicsEmployees, LawEmployees union(byName: true)~> allEmployees",
				"allEmployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['allEmployeesUnion.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> allEmployeesSink"
			]
		}
	}
}