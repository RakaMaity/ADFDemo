{
	"name": "dataflowParse",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_SQL_Employee11",
						"type": "DatasetReference"
					},
					"name": "employee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedTextOutput",
						"type": "DatasetReference"
					},
					"name": "employeeSink"
				}
			],
			"transformations": [
				{
					"name": "parseSkills"
				},
				{
					"name": "parselocation"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empId as integer,",
				"          empName as string,",
				"          skills as string,",
				"          location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> employee",
				"employee parse(skills = skills ? (skill1 as string,",
				"          skill2 as string,",
				"          skill3 as string),",
				"     format: 'delimited',",
				"     columnNamesAsHeader: false,",
				"     columnDelimiter: '|',",
				"     nullValue: '') ~> parseSkills",
				"parseSkills parse(location = location ? (city as string,",
				"          country as string),",
				"     format: 'json',",
				"     documentForm: 'singleDocument') ~> parselocation",
				"parselocation sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['employeeparsedoutput.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empId,",
				"          empName,",
				"          Skill1 = skills.skill1,",
				"          Skill2 = skills.skill2,",
				"          Skill3 = skills.skill3,",
				"          City = location.city,",
				"          Country = location.country",
				"     ),",
				"     partitionBy('hash', 1)) ~> employeeSink"
			]
		}
	}
}