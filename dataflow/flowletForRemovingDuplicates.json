{
	"name": "flowletForRemovingDuplicates",
	"properties": {
		"type": "Flowlet",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "LinkedServiceTest1",
						"type": "LinkedServiceReference"
					},
					"name": "sourceEmployee"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "select1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "outputofFlowlet"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as short,",
				"          empName as string,",
				"          gender as string,",
				"          location as string,",
				"          department as string,",
				"          Salary as short",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     container: 'test1containerrg',",
				"     folderPath: 'input',",
				"     fileName: 'employeewindow.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> sourceEmployee",
				"sourceEmployee aggregate(groupBy(empName,",
				"          gender,",
				"          department),",
				"     count = count()) ~> aggregate1",
				"aggregate1 select(mapColumn(",
				"          empName,",
				"          gender,",
				"          department",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 keyGenerate(output(empId as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 output(mapColumn(",
				"          empName,",
				"          gender,",
				"          department,",
				"          empId",
				"     )) ~> outputofFlowlet"
			]
		}
	}
}