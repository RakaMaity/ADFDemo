{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Test1TrialADF"
		},
		"LinkedServiceTest1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServiceTest1'"
		},
		"LinkedService_SQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LinkedService_SQL'"
		},
		"LinkedService_SQL_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "azureadfraka.database.windows.net"
		},
		"LinkedService_SQL_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "azure-ADF-practice"
		},
		"LinkedService_SQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "SQLDBADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipelineAnnotation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [
					"Annotation"
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineFilter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.ListOfValues",
								"type": "Expression"
							},
							"condition": {
								"value": "@greater(item(),3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Append variable1",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "FinalListOfValues",
								"value": "@activity('Filter1').output"
							}
						],
						"typeProperties": {
							"variableName": "FinalListOfValues",
							"value": {
								"value": "@activity('Filter1').output",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ListOfValues": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5
						]
					}
				},
				"variables": {
					"FinalListOfValues": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-07-29T16:43:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineWebActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RestAPICall",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://dummy.restapiexample.com/api/v1/employees"
						}
					},
					{
						"name": "WebHook1",
						"type": "WebHook",
						"dependsOn": [
							{
								"activity": "RestAPICall",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://dummy.restapiexample.com/api/v1/employees",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@activity('RestAPICall').output.status",
								"type": "Expression"
							},
							"timeout": "00:10:00",
							"reportStatusOnCallBack": false,
							"disableCertValidation": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-07-30T15:42:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedServiceTest1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LinkedServiceTest1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedService_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('LinkedService_SQL_properties_typeProperties_server')]",
					"database": "[parameters('LinkedService_SQL_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LinkedService_SQL_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LinkedService_SQL_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GenderMappingFunction')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "UDFLibrary",
				"typeProperties": {
					"sources": [],
					"sinks": [],
					"transformations": [],
					"scriptLines": [
						"GenderToIntegerFunction(string) as integer = iif(i1==\"Female\",1,iif(i1==\"Male\", 0, -1))"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/flowletForRemovingDuplicates')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Flowlet",
				"typeProperties": {
					"sources": [],
					"sinks": [],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "select1"
						},
						{
							"name": "surrogateKey1"
						},
						{
							"name": "EmployeeInput"
						},
						{
							"name": "outputofFlowlet"
						}
					],
					"scriptLines": [
						"input(output(",
						"          empName as string,",
						"          gender as string,",
						"          department as string",
						"     ),",
						"     order: 0,",
						"     allowSchemaDrift: true) ~> EmployeeInput",
						"EmployeeInput aggregate(groupBy(empName,",
						"          gender,",
						"          department),",
						"     count = count()) ~> aggregate1",
						"aggregate1 select(mapColumn(",
						"          empName,",
						"          gender,",
						"          department",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 keyGenerate(output(empId as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"surrogateKey1 output(mapColumn(",
						"          empName,",
						"          gender,",
						"          department,",
						"          empId",
						"     )) ~> outputofFlowlet"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineScript')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "LinkedService_SQL",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "select * from dbo.employee;\n"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00",
							"logSettings": {
								"logDestination": "ActivityOutput"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceTest1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"outputFolder": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().outputFolder",
							"type": "Expression"
						},
						"container": "test1containerrg"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceTest1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OnFail')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceTest1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ABC.csv",
						"folderPath": "input",
						"container": "test1containerrg"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "empid",
						"type": "String"
					},
					{
						"name": "empName",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "department",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceTest1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_Employee11')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedService_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "empId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "empName",
						"type": "varchar"
					},
					{
						"name": "skills",
						"type": "varchar"
					},
					{
						"name": "location",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employee11"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowSourceDepartment')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceTest1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "department.csv",
						"folderPath": "input",
						"container": "test1containerrg"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "department",
						"type": "String"
					},
					{
						"name": "role",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceTest1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowSourceEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceTest1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employee.csv",
						"folderPath": "input",
						"container": "test1containerrg"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "empid",
						"type": "String"
					},
					{
						"name": "empName",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "department",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceTest1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSetMultipleFolders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceTest1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"OuputFolder": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().OuputFolder",
							"type": "Expression"
						},
						"container": "test1containerrg"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceTest1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSetTest1Input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceTest1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test1ADF.txt",
						"folderPath": "input",
						"container": "test1containerrg"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceTest1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSetTest1Output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceTest1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output",
						"container": "test1containerrg"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceTest1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSet_SQLServer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedService_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "empId",
						"type": "varchar"
					},
					{
						"name": "empName",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					},
					{
						"name": "location",
						"type": "varchar"
					},
					{
						"name": "department",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceTest1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dataCopy.csv",
						"folderPath": "input",
						"container": "test1containerrg"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Raka",
						"type": "String"
					},
					{
						"name": "Female",
						"type": "String"
					},
					{
						"name": "32",
						"type": "String"
					},
					{
						"name": "TCS",
						"type": "String"
					},
					{
						"name": "Kolkata",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceTest1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServiceTest1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output",
						"container": "test1containerrg"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServiceTest1')]"
			]
		}
	]
}